[tool.poetry]
name = "Hondana"
version = "4.0.0a"
description = "An asynchronous wrapper around the MangaDex v5 API"
authors = ["Alex NÃ¸rgaard <umbra@abstractumbra.dev>"]

license = "MIT"
readme = "README.md"
repository = "https://github.com/AbstractUmbra/hondana"

keywords = ["mangadex", "manga", "api", "wrapper"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet",
    "Typing :: Typed",
]
include = ["LICENSE"]
packages = [
    { include = "hondana" },
    { include = "hondana/**/*.py" },
    { include = "hondana/py.typed" },
    { include = "hondana/extras/tags.json" },
    { include = "hondana/extras/report_reasons.json" },
]

[tool.poetry.urls]
"Issue Tracker" = "https://github.com/AbstractUmbra/hondana/issues"
"Discord" = "https://discord.gg/aYGYJxwqe5"

[tool.poetry.dependencies]
python = "^3.11"
aiohttp = [
    { version = "^3.9" },
    { version = "^3.9", markers = "extra == 'speed'", extras = [
        "speedups",
    ] },
]
typing-extensions = "*"

orjson = { version = "*", optional = true }

[tool.poetry.extras]
speed = ["aiohttp", "orjson"]

[tool.poetry.group.speedups.dependencies]
aiohttp = { version = "^3.8", extras = ["speedups"] }
orjson = "*"

[tool.poetry.group.docs.dependencies]
sphinx = "*"
sphinxcontrib-trio = "*"
furo = "*"

[tool.poetry.group.tests.dependencies]
pytest = "*"
pytest-asyncio = "*"

[tool.poetry.group.dev.dependencies]
poethepoet = "*"
scalene = "*"
pre-commit = "*"
ruff = "*"

[tool.poetry.scripts]
version = "hondana.__main__:show_version"

[tool.ruff]
target-version = "py311"
line-length = 125

[tool.ruff.lint]
exclude = ["docs/extensions/*.py"]
select = [
    "A",
    "C4",
    "F",
    "G",
    "I",
    "PTH",
    "RUF",
    "SIM",
    "TCH",
    "UP",
    "W",
    "PERF",
    "ANN",
]
ignore = [
    "F401",
    "F402",
    "F403",
    "F405",
    "PERF203",
    "RUF001",
    "RUF009",
    "SIM105",
    "UP034",
    "UP038",
    "ANN101",
    "ANN102",
    "ANN401",
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false
combine-as-imports = true

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
parametrize-names-type = "tuple"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.pyright]
venvPath = "."
venv = ".venv/"
exclude = ["**/__pycache__", "docs/**/*.py", "tests/_update_payloads.py"]
include = ["hondana", "tests", "examples"]
useLibraryCodeForTypes = true
typeCheckingMode = "strict"
reportImportCycles = false

[tool.pytest.ini_options]
asyncio_mode = "strict"
testpaths = ["tests"]

[tool.poe.tasks]
spec = "python _api_dl.py"
install = "poetry install --with tests,docs,speedups"
check = "ruff check ."
format = "ruff format ."
pyright = "pyright"
types_ = "pyright --ignoreexternal --verifytypes hondana"
types = ["pyright", "types_"]
tests = "pytest"
docs = "sphinx-build -aEWT --keep-going docs/ docs/build" # TODO: add -n when sphinx is fixed
tags = { script = "_preflight:__build_tags()" }
report_reasons = { script = "_preflight:__build_report_reasons()" }
uninstall = "pip uninstall hondana -y"
pre = [
    "install",
    "check",
    "format",
    "types",
    "tests",
    "docs",
    "tags",
    "report_reasons",
    "uninstall",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
