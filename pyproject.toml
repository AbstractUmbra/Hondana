[tool.poetry]
name = "Hondana"
version = "3.4.4"
description = "An asynchronous wrapper around the MangaDex v5 API"
authors = ["Alex NÃ¸rgaard <Umbra@AbstractUmbra.dev>"]

license = "MIT"
readme = "README.md"
repository = "https://github.com/AbstractUmbra/hondana"

keywords = ["mangadex", "manga", "api", "wrapper"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Internet",
    "Typing :: Typed",
]
include = ["LICENSE"]
packages = [
    { include = "hondana" },
    { include = "hondana/**/*.py" },
    { include = "hondana/py.typed" },
    { include = "hondana/extras/tags.json" },
    { include = "hondana/extras/report_reasons.json" },
]

[tool.poetry.urls]
"Issue Tracker" = "https://github.com/AbstractUmbra/hondana/issues"
"Discord" = "https://discord.gg/aYGYJxwqe5"

[tool.poetry.dependencies]
python = "^3.9"
aiohttp = "^3.8.1"
typing-extensions = "*"

[tool.poetry.group.speedups.dependencies]
aiohttp = { version = "^3.8.1", extras = ["speedups"] }
orjson = "*"

[tool.poetry.group.docs.dependencies]
sphinx = "^5.0.0"
sphinxcontrib-trio = "*"
furo = "*"

[tool.poetry.group.tests.dependencies]
pytest = "*"
pytest-asyncio = "*"

[tool.poetry.group.dev.dependencies]
pytest-asyncio = "*"
poethepoet = "*"
black = "*"

[tool.poetry.scripts]
version = "hondana.__main__:show_version"

[tool.black]
line-length = 125
target-version = ["py39"]

[tool.isort]
profile = "black"
src_paths = ["hondana"]
# known_first_party = ["hondana"]
lines_after_imports = 2
line_length = 125

[tool.pyright]
include = ["hondana", "tests", "docs", "examples"]
useLibraryCodeForTypes = true
typeCheckingMode = "basic"
pythonVersion = "3.9"
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
strictParameterNoneValue = true
reportMissingImports = "error"
reportUnusedImport = "error"
reportUnusedClass = "error"
reportUnusedFunction = "error"
reportUnusedVariable = "error"
reportGeneralTypeIssues = "error"
reportFunctionMemberAccess = "error"
reportDuplicateImport = "error"
reportUntypedFunctionDecorator = "error"
reportUnnecessaryTypeIgnoreComment = "warning"

[tool.pytest.ini_options]
asyncio_mode = "strict"

[tool.poe.tasks]
spec = "python _api_dl.py"
install = "poetry install --with tests,docs,speedups"
format = "black ."
pyright = "pyright"
types_ = "pyright --ignoreexternal --lib --verifytypes hondana"
types = ["pyright", "types_"]
tests = "pytest"
docs = "sphinx-build -a -E -W -T --keep-going docs/ docs/build" # TODO: add -n when sphinx is fixed
tags = { script = "_preflight:__build_tags()" }
report_reasons = { script = "_preflight:__build_report_reasons()" }
uninstall = "pip uninstall hondana -y"
pre = ["install", "format", "types", "tests", "docs", "tags", "report_reasons", "uninstall"]

[build-system]
requires = ["poetry-core>=1.1.0"]
build-backend = "poetry.core.masonry.api"
